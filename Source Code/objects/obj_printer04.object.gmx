<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_printer_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
keyboard_string = ""
can_go_next = false
wait_for_input = true
can_go_next = false
text[0,0] = "Which do you take, the old or the new?"
text[0,1] = "Which do you take, the elaborate or the plain?"

//Right
//Old
text[1,0] = "old"
text[1,1] = "The old blade rests comfortably at your hip."
text[1,2] = "As you continue through the gallery you come across a section #full of paintings. You stop in front of one depicting a crowd #of beach loungers.#In the forground is a small boy with a worried expression on his face.#He looks very different from the rest of the beach goers."
text[1,3] = "As you watch the painting comes alive!#You can hear the crash of waves and the chatter of the crowd.#The boy's head twists side to side.#It is clear he is uncertain if he is welcome."
//text[1,4] = "Do you tell the boy to go for it, or to go home?"

//New
text[2,0] = "new"
text[2,1] = "You hardly notice the weight of the new blade at your hip."

//Left
//Elaborate
text[3,0] = "elaborate"
text[3,1] = "You admire the fine craftsmanship of the shield #before strapping it to your back.#You wish you could show it to someone."
text[3,2] = "As you continue down the hall you come across a massive #tapestry depicting a young girl #in a laboratory.#As you walk the tapestry seems to move- to animate!#You see the girl mixing liquids in beakers and test tubes.#An old man discovers her and tosses her out of the lab.#You notice he leaves the door unlocked."
//text[3,3] = "Do you try to push on the door, or pull the lock?"

//Plain
text[4,0] = "plain"
text[4,1] = "You strap the shield to your back.#You feel ready for battle."

//Wrong Right
text[5,0] = "Which do you take, the old or the new?#Type 'old' or 'new'."

//Wrong Left
text[6,0] = "Which do you take, the elaborate or the plain?#Type 'elaborate' or 'plain'."
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_go_next = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (wait_for_input) {
    input_text = keyboard_string
    draw_text(xorigin, yorigin + 200, input_text)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>input_text = string_lower(input_text)
if (wait_for_input) {
    if (input_text == text[1,0] &amp;&amp; global.direction1 == "right") {
        current_line = 1
        current_text = 1
        wait_for_input = false
        global.frame = "old"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[2,0] &amp;&amp; global.direction1 == "right") {
        current_line = 2
        current_text = 1
        wait_for_input = false
        global.frame = "new"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[3,0] &amp;&amp; global.direction1 == "left") {
        current_line = 3
        current_text = 1
        wait_for_input = false
        global.frame = "elaborate"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[4,0] &amp;&amp; global.direction1 == "left") {
        current_line = 4
        current_text = 1
        wait_for_input = false
        global.frame = "plain"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (global.direction1 == "right"){
        current_line = 5
        current_text = 0
        wait_for_input = true
        input_text = keyboard_string
        keyboard_string = ""
        input_text = ""
    }
    else {
        current_line = 6
        current_text = 0
        wait_for_input = true
        input_text = keyboard_string
        keyboard_string = ""
        input_text = ""
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_text &lt; array_length_2d(text, current_line) - 1 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_text++
    can_go_next = false
    alarm_set(0, 15)
}
else if(current_line == 2 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_line = 1
    current_text = 2
    can_go_next = false
    alarm_set(0, 15)
}
else if(current_line == 4 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_line = 3
    current_text = 2
    can_go_next = false
    alarm_set(0, 15)
}
if (current_text = array_length_2d(text, current_line) - 1 &amp;&amp; can_go_next &amp;&amp; alarm_get(0) == -1 &amp;&amp; !wait_for_input) {
    new_printer = instance_create(x, y, obj_printer05)
    if (global.direction1 == "right") {
        with(new_printer) {
            current_text = 0
        }
    }
    else {
        with(new_printer) {
            current_text = 1
        }
    }
    instance_destroy(self)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
