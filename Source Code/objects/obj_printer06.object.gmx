<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_printer_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
keyboard_string = ""
can_go_next = false
wait_for_input = true
text[0,0] = "Do you speak up, or remain silent?"
text[0,1] = "Do you shout, or continue on in silence?"

//Right
//Speak
text[1,0] = "speak"
text[1,1] = "You speak up and say to give the old woman a chance.#The young woman responds, sounding embarassed, 'I'm sorry. #I don't know what came over me.#You're plenty qualified, you're hired!'"
text[1,2] = "The phone goes silent, so you replace the reciever and continue on.#"
text[1,3] = "The carpet lining the gallery ends."
text[1,4] = "You enter what appears to be a lobby.#In the center of the room is an animatronic man.#He is coughing and reaching for water.#But the cup is attached to him by a piece of metal that #pushes it away when he reaches forward."
//text[1,5] = "Do you help the automaton?"

//Silent
text[2,0] = "silent"
text[2,1] = "You remain silent.#You hear the old woman start to cry and leave.#The young woman mutters, 'Why'd I say that? #She was perfect for the job!'"

//Left
//Open
text[3,0] = "shout"
text[3,1] = "You scream a wordless shout!#You've been silent for longer than you realized, and it feels good #to break the quiet of this place.#When you finally stop for breath the statue cracks.#As you watch it crumbles to pieces and collapses into a pile of dust.#You feel as though you've missed out on something.'"

//Lock
text[4,0] = "silence"
text[4,1] = "You remain silent as you step past the statue.#Further down the hallway the same statue appears, now #offering a woolen scarf in open hands.#The scarf is warm, and you notice the cloying mist a little less."
text[4,2] = "You continue down the hallway which soon ends, #opening into a large room."

//Wrong Right
text[5,0] = "Do you speak up, or remain silent?#Type 'speak' or 'silent'."

//Wrong Left
text[6,0] = "Do you shout, or continue on in silence?#Type 'shout' or 'silence'."
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_go_next = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (wait_for_input) {
    input_text = keyboard_string
    draw_text(xorigin, yorigin + 200, input_text)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>input_text = string_lower(input_text)
if (wait_for_input) {
    if (input_text == text[1,0] &amp;&amp; global.direction1 == "right") {
        current_line = 1
        current_text = 1
        wait_for_input = false
        global.item = "speak"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[2,0] &amp;&amp; global.direction1 == "right") {
        current_line = 2
        current_text = 1
        wait_for_input = false
        global.item = "silent"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[3,0] &amp;&amp; global.direction1 == "left") {
        current_line = 3
        current_text = 1
        wait_for_input = false
        global.item = "shout"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[4,0] &amp;&amp; global.direction1 == "left") {
        current_line = 4
        current_text = 1
        wait_for_input = false
        global.item = "silence"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (global.direction1 == "right"){
        current_line = 5
        current_text = 0
        wait_for_input = true
        input_text = keyboard_string
        keyboard_string = ""
        input_text = ""
    }
    else {
        current_line = 6
        current_text = 0
        wait_for_input = true
        input_text = keyboard_string
        keyboard_string = ""
        input_text = ""
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_text &lt; array_length_2d(text, current_line) - 1 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_text++
    can_go_next = false
    alarm_set(0, 15)
}
else if (current_line == 2 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_line = 1
    current_text = 2
    can_go_next = false
    alarm_set(0, 15)
}
else if (current_line == 3 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_line = 4
    current_text = 2
    can_go_next = false
    alarm_set(0, 15)
}
else if (current_line == 4 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_line = 1
    current_text = 4
    can_go_next = false
    alarm_set(0, 15)
}
if (current_text = array_length_2d(text, current_line) - 1 &amp;&amp; can_go_next &amp;&amp; alarm_get(0) == -1 &amp;&amp; !wait_for_input) {
    new_printer = instance_create(x, y, obj_printer07)
    with(new_printer) {
        current_text = 0
    }
    instance_destroy(self)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
