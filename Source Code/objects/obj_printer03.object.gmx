<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_printer_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
input_text = keyboard_string
keyboard_string = ""
can_go_next = false
wait_for_input = true
can_go_next = false
text[0,0] = "Maybe you should try to find the exit once more?#Before you the way diverges to the left and right.#The way behind holds no hope.#Do you go right, or left?"

//Opt right
text[1,0] = "right"
text[1,1] = "The floors of the hallway on the right are lined with plush carpets.#Are they familiar?#Did you have plush carpets in you home?#Or maybe you visited somewhere with them."
text[1,2] = "The walls pull back and your hallway turns into a gallery.#Artifacts lay out on display under thick sheets of glass.#In the center of the toom is a stand whose glass is broken.#Within the display are: #an old, worn and rusted dagger, a relic from some long-ago war #and passed down for generations before ending here,#and a sparkling new dagger, created to show off modern #forging techniques and brimming with future potential.#Both vaguely remind you of home, of who you once were."
//text[1,3] = "Which do you take, the old or the new?"

//Opt left
text[2,0] = "left"
text[2,1] = "The dust hangs thickly in the air of the hallway to the left.#No one has traipsed these halls in a millenia.#And yet on the wall ahead glows a fresh torch."
text[2,2] = "To the left of the torch hangs an elaborately decorated shield.#Dozens of colors are displayed in intricate geometric designs which #must have taken days or weeks to paint.#To the right of the torch hangs a larger, plain wooden shield.#Stout iron bands hold the thick wooden slats together.#It isn't pretty, but it would function well.#Both vaguely remind you of home, of the people you knew there."
//text[2,3] = "Which do you take, the elaborate or the plain?"

//Opt wrong
text[4,0] = "Type right or left."
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_go_next = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>input_text = string_lower(input_text)
if (wait_for_input) {
    if (input_text == text[1,0]) {
        current_line = 1
        current_text = 1
        wait_for_input = false
        global.direction1 = "right"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else if (input_text == text[2,0]) {
        current_line = 2
        current_text = 1
        wait_for_input = false
        global.direction1 = "left"
        keyboard_string = ""
        input_text = ""
        alarm_set(0, 15)
    }
    else {
        current_line = 4
        current_text = 0
        wait_for_input = true
        input_text = keyboard_string
        keyboard_string = ""
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_text &lt; array_length_2d(text, current_line) - 1 &amp;&amp; can_go_next &amp;&amp; !wait_for_input) {
    current_text++
    can_go_next = false
    alarm_set(0, 15)
}
if (current_text = array_length_2d(text, current_line) - 1 &amp;&amp; can_go_next &amp;&amp; alarm_get(0) == -1 &amp;&amp; !wait_for_input) {
    new_printer = instance_create(x, y, obj_printer04)
    with(new_printer) {
        if (global.direction1 == "right") {
            current_text = 0
        }
        else {
            current_text = 1
        }
    }
    instance_destroy(self)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (wait_for_input) {
    input_text = keyboard_string
    draw_text(xorigin, yorigin + 200, input_text)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
